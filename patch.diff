*** Begin Patch
*** Update File: app.js
@@
 document.addEventListener('DOMContentLoaded', () => {
@@
   qs('#privacy-form')?.addEventListener('submit', (e) => {
@@
   });
 });

// --- Developer settings (tab) + favicon cropper injection ---
(function(){
  const SITE_TITLE_KEY = 'gamenet_site_title';
  const FAVICON_KEY = 'gamenet_favicon_data';

  const U = (s) => s;
  const STR_DEVELOPER_SETTINGS = "\u062A\u0646\u0638\u06CC\u0645\u0627\u062A \u062A\u0648\u0633\u0639\u0647 \u062F\u0647\u0646\u062F\u0647";
  const STR_SITE_TITLE = "\u0639\u0646\u0648\u0627\u0646 \u0633\u0627\u06CC\u062A";
  const STR_FAVICON = "\u0641\u0627\u0648\u0622\u06CC\u06A9\u0648\u0646 \u0633\u0627\u06CC\u062A";
  const STR_SET_CHANGE_FAVICON = "\u062A\u0646\u0638\u06CC\u0645/\u062A\u063A\u06CC\u06CC\u0631 \u0641\u0627\u0648\u0622\u06CC\u06A9\u0648\u0646";
  const STR_PICK_IMAGE = "\u0627\u0646\u062A\u062E\u0627\u0628 \u062A\u0635\u0648\u06CC\u0631";
  const STR_ZOOM = "\u0628\u0632\u0631\u06AF\u0646\u0645\u0627\u06CC\u06CC";
  const STR_CANCEL = "\u0627\u0646\u0635\u0631\u0627\u0641";
  const STR_SAVE = "\u0630\u062E\u06CC\u0631\u0647";

  function ensureStyles(){
    if (document.getElementById('dev-styles')) return;
    const style = document.createElement('style');
    style.id = 'dev-styles';
    style.textContent = `
    .favicon-icon{width:20px;height:20px;border-radius:4px;object-fit:cover}
    .favicon-row{display:flex;align-items:center;gap:10px}
    .cropper-wrap{width:100%;max-width:256px;aspect-ratio:1/1;border:1px solid var(--border);border-radius:12px;overflow:hidden;display:grid;place-items:center;background:#f8f8f8}
    #favicon-canvas{width:100%;height:auto;display:block}
    `;
    document.head.appendChild(style);
  }

  function ensureSidebarFavicon(){
    const hdr = document.querySelector('.sidebar-header');
    if (!hdr) return null;
    let img = document.getElementById('sidebar-favicon');
    if (!img){
      img = document.createElement('img');
      img.id = 'sidebar-favicon';
      img.className = 'favicon-icon hidden';
      img.alt = 'favicon';
      const title = hdr.querySelector('.title');
      hdr.insertBefore(img, title || null);
    }
    return img;
  }

  function getFaviconLink(){
    let link = document.querySelector('link[rel="icon"]');
    if (!link){
      link = document.createElement('link');
      link.rel = 'icon';
      document.head.appendChild(link);
    }
    return link;
  }

  function applyTitle(title){
    const t = title || '';
    const sdTitle = document.querySelector('.sidebar .title');
    if (sdTitle) sdTitle.textContent = t || sdTitle.textContent;
    if (t) document.title = t;
    const input = document.getElementById('site-title');
    if (input && input.value !== t) input.value = t;
  }

  function applyFavicon(dataUrl){
    const link = getFaviconLink();
    const img = ensureSidebarFavicon();
    const preview = document.getElementById('favicon-preview');
    if (dataUrl){
      link.href = dataUrl;
      if (img){ img.src = dataUrl; img.classList.remove('hidden'); }
      if (preview){ preview.src = dataUrl; preview.classList.remove('hidden'); }
    } else {
      link.href = 'data:,';
      if (img){ img.src = ''; img.classList.add('hidden'); }
      if (preview){ preview.src = ''; preview.classList.add('hidden'); }
    }
  }

  function injectDevTab(){
    const nav = document.querySelector('.nav');
    if (nav && !nav.querySelector('[data-tab="dev"]')){
      const btn = document.createElement('button');
      btn.className = 'nav-item';
      btn.setAttribute('data-tab','dev');
      const span = document.createElement('span');
      span.textContent = STR_DEVELOPER_SETTINGS;
      btn.appendChild(span);
      btn.addEventListener('click', () => {
        if (typeof setActiveTab === 'function') setActiveTab('dev');
        const el = document.getElementById('page-title');
        if (el) el.textContent = STR_DEVELOPER_SETTINGS;
      });
      nav.appendChild(btn);
    }

    if (!document.getElementById('tab-dev')){
      const sec = document.createElement('section');
      sec.id = 'tab-dev';
      sec.className = 'tab';
      sec.innerHTML = `
        <div class="card">
          <h3>${STR_DEVELOPER_SETTINGS}</h3>
          <div class="form grid">
            <label class="field full">
              <span>${STR_SITE_TITLE}</span>
              <input id="site-title" type="text" value="" placeholder="\u0645\u062B\u0644\u0627\u064B: \u0645\u062F\u06CC\u0631\u06CC\u062A \u06AF\u06CC\u0645\u200C\u0646\u062A" />
            </label>
            <div class="field">
              <span>${STR_FAVICON}</span>
              <div class="favicon-row">
                <img id="favicon-preview" class="favicon-icon hidden" alt="favicon" />
                <button id="open-favicon-modal" class="btn">${STR_SET_CHANGE_FAVICON}</button>
              </div>
            </div>
          </div>
        </div>`;
      const content = document.querySelector('.content');
      if (content) content.appendChild(sec);
    }

    // Remove old site-title field from Settings tab if exists
    const oldTitleInput = document.querySelector('#tab-settings #site-title');
    if (oldTitleInput){
      const container = oldTitleInput.closest('.field');
      if (container) container.remove();
    }
  }

  function injectFaviconModal(){
    if (document.getElementById('favicon-modal')) return;
    const modal = document.createElement('div');
    modal.id = 'favicon-modal';
    modal.className = 'modal hidden';
    modal.setAttribute('role','dialog');
    modal.setAttribute('aria-modal','true');
    modal.innerHTML = `
      <div class="modal-card">
        <h3 id="favicon-modal-title">\u062A\u0646\u0638\u06CC\u0645 \u0641\u0627\u0648\u0622\u06CC\u06A9\u0648\u0646 (\u0628\u0631\u0634 1:1)</h3>
        <div class="form">
          <label class="field">
            <span>${STR_PICK_IMAGE}</span>
            <input type="file" id="favicon-file" accept="image/*" />
          </label>
          <div class="cropper-wrap">
            <canvas id="favicon-canvas" width="256" height="256" aria-label="\u0646\u0627\u062D\u06CC\u0647 \u0628\u0631\u0634"></canvas>
          </div>
          <label class="field">
            <span>${STR_ZOOM}</span>
            <input type="range" id="favicon-zoom" min="0.5" max="3" step="0.01" value="1" />
          </label>
        </div>
        <div class="modal-actions">
          <button type="button" class="btn" id="favicon-cancel">${STR_CANCEL}</button>
          <button type="button" class="btn primary" id="favicon-save">${STR_SAVE}</button>
        </div>
        <p id="favicon-msg" class="hint"></p>
      </div>`;
    document.body.appendChild(modal);
  }

  function initLogic(){
    ensureStyles();
    ensureSidebarFavicon();
    injectDevTab();
    injectFaviconModal();

    // Load persisted title and favicon
    const storedTitle = localStorage.getItem(SITE_TITLE_KEY);
    if (storedTitle) applyTitle(storedTitle);
    else {
      const def = document.querySelector('.sidebar .title')?.textContent?.trim() || '';
      if (def) applyTitle(def);
    }
    const fav = localStorage.getItem(FAVICON_KEY);
    if (fav) applyFavicon(fav);

    // Hook title input
    document.addEventListener('input', (e) => {
      const t = e.target;
      if (t && t.id === 'site-title'){
        const val = String(t.value || '').trim();
        localStorage.setItem(SITE_TITLE_KEY, val);
        applyTitle(val);
      }
    });

    // Favicon modal logic
    const openBtn = document.getElementById('open-favicon-modal');
    const modal = document.getElementById('favicon-modal');
    const fileInput = document.getElementById('favicon-file');
    const canvas = document.getElementById('favicon-canvas');
    const zoom = document.getElementById('favicon-zoom');
    const ctx = canvas ? canvas.getContext('2d') : null;
    let img = new Image();
    let hasImage = false;
    let baseScale = 1;
    let scale = 1;
    let offsetX = 0, offsetY = 0;
    let dragging = false; let lastX = 0, lastY = 0;

    function clearCanvas(){ if (!ctx) return; ctx.clearRect(0,0,canvas.width,canvas.height); ctx.fillStyle='#ffffff'; ctx.fillRect(0,0,canvas.width,canvas.height); }
    function draw(){ if (!ctx || !hasImage) { clearCanvas(); return; } clearCanvas(); const w = img.width * scale; const h = img.height * scale; const x = (canvas.width - w)/2 + offsetX; const y = (canvas.height - h)/2 + offsetY; ctx.drawImage(img, x, y, w, h); }
    function fitImage(){ if (!img || !canvas) return; const s = Math.min(canvas.width / img.width, canvas.height / img.height); baseScale = s; scale = s; offsetX = 0; offsetY = 0; if (zoom) zoom.value = '1'; draw(); }

    function openModal(){ if (!modal) return; modal.classList.remove('hidden'); }
    function closeModal(){ if (!modal) return; modal.classList.add('hidden'); if (fileInput) fileInput.value=''; }

    if (openBtn) openBtn.addEventListener('click', openModal);
    document.getElementById('favicon-cancel')?.addEventListener('click', closeModal);
    document.getElementById('favicon-save')?.addEventListener('click', () => {
      if (!canvas) return; const out = document.createElement('canvas'); out.width = 64; out.height = 64; const octx = out.getContext('2d'); if (!octx) return; // draw scaled down from preview
      octx.drawImage(canvas, 0, 0, out.width, out.height);
      const url = out.toDataURL('image/png');
      localStorage.setItem(FAVICON_KEY, url);
      applyFavicon(url);
      closeModal();
    });

    if (fileInput) fileInput.addEventListener('change', (e) => {
      const f = e.target.files && e.target.files[0]; if (!f) return;
      const reader = new FileReader();
      reader.onload = () => { img = new Image(); img.onload = () => { hasImage = true; fitImage(); }; img.src = reader.result; };
      reader.readAsDataURL(f);
    });

    if (zoom) zoom.addEventListener('input', () => { const z = parseFloat(zoom.value || '1'); scale = baseScale * z; draw(); });

    if (canvas){
      canvas.addEventListener('mousedown', (e) => { dragging = true; lastX = e.clientX; lastY = e.clientY; });
      window.addEventListener('mousemove', (e) => { if (!dragging) return; offsetX += (e.clientX - lastX); offsetY += (e.clientY - lastY); lastX = e.clientX; lastY = e.clientY; draw(); });
      window.addEventListener('mouseup', () => { dragging = false; });
      canvas.addEventListener('mouseleave', () => { dragging = false; });
      // Prevent image drag ghost
      canvas.addEventListener('dragstart', (e)=> e.preventDefault());
    }
  }

  if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', initLogic); else initLogic();
})();
*** End Patch
